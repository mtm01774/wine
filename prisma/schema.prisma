generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("ADMIN")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Wine {
  id           String           @id @default(cuid())
  name         String
  type         String
  region       String
  price        Float
  rating       Float
  image        String?
  year         Int
  stock        Int             @default(0)
  translations WineTranslation[]
  grapeVariety String?
  body         String?
  servingTemp  String?
  cartItems    CartItem[]
  orderItems   OrderItem[]
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
}

model WineTranslation {
  id          String   @id @default(uuid())
  wineId      String
  wine        Wine     @relation(fields: [wineId], references: [id], onDelete: Cascade)
  locale      String
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([wineId, locale])
}

model Plan {
  id          String   @id @default(uuid())
  name        String
  price       Float
  interval    String   @default("month")
  features    String   // JSON array of features
  translations PlanTranslation[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PlanTranslation {
  id          String   @id @default(uuid())
  planId      String
  plan        Plan     @relation(fields: [planId], references: [id], onDelete: Cascade)
  locale      String
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([planId, locale])
}

model Contact {
  id        String   @id @default(uuid())
  name      String
  email     String
  subject   String
  message   String
  status    String   @default("PENDING")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        String   @id @default(cuid())
  quantity  Int      @default(1)
  wine      Wine     @relation(fields: [wineId], references: [id])
  wineId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id         String   @id @default(cuid())
  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])
  status     String
  total      Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  items      OrderItem[]
}

model OrderItem {
  id       String @id @default(cuid())
  orderId  String
  order    Order  @relation(fields: [orderId], references: [id])
  wineId   String
  wine     Wine   @relation(fields: [wineId], references: [id])
  quantity Int
  price    Float
} 